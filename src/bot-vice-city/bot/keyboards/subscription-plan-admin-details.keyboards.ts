import TelegramBot from 'node-telegram-bot-api';
import { UserLanguageEnum } from 'src/helper';
import { RedisService } from 'src/redis/redis.service';
import { SubscriptionPlan } from 'src/bot-vice-city/subscriptionPlan/subscriptionPlan.entity';
import { User } from 'src/bot-vice-city/user/user.entity';

export const sendSubscriptionPlanAdminDetailsKeyboard = async (
  id: number,
  bot: TelegramBot,
  plan: SubscriptionPlan,
  redisService: RedisService,
  user: User,
) => {
  const text = `${
    user.language === UserLanguageEnum.EN
      ? 'Subscription plan data'
      : user.language === UserLanguageEnum.UA
        ? '–î–∞–Ω—ñ –ø–ª–∞–Ω—É –ø—ñ–¥–ø–∏—Å–∫–∏'
        : '–î–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏'
  }:

- <b>—Ü–µ–Ω–∞</b>: ${plan.price}

--------------

- <b>–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ª–∏</b>: ${plan.is_published} ${
    plan.is_published ? '‚úÖ' : '‚ùå'
  }

--------------

- <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤</b>: ${plan.months_count}

--------------

- <b>–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä</b>: ${plan.position}

--------------
  
- <b>—É–∫—Ä –Ω–∞–∑–≤–∞–Ω–∏–µ</b>: ${plan.nameUA}

--------------

- <b>—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ</b>: ${plan.nameRU}

--------------

- <b>—É–∫—Ä –æ–ø–∏—Å–∞–Ω–∏–µ</b>: ${plan.descriptionUA}

--------------

- <b>—Ä—É –æ–ø–∏—Å–∞–Ω–∏–µ</b>: ${plan.descriptionRU}

--------------

${
  user.language === UserLanguageEnum.EN
    ? 'Choose field to update'
    : user.language === UserLanguageEnum.UA
      ? '–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ–ª–µ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è'
      : '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
}:`;

  const planData = {
    id: plan.id,
  };

  const callback_data = `EditSubscriptionPlanAdmin;`;
  redisService.add(
    `EditSubscriptionPlanAdmin-${user.id}`,
    JSON.stringify(planData),
  );

  await bot.sendMessage(id, text, {
    parse_mode: 'HTML',
    reply_markup: {
      remove_keyboard: true,
      inline_keyboard: [
        [
          {
            text: `—Ü–µ–Ω–∞`,
            callback_data: callback_data + 'price',
          },
          {
            text: `–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ª–∏`,
            callback_data: callback_data + 'is_published',
          },
        ],
        [
          {
            text: `–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤`,
            callback_data: callback_data + 'months_count',
          },
          {
            text: `–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä`,
            callback_data: callback_data + 'position',
          },
        ],
        [
          // {
          //   text: `nameEN`,
          //   callback_data: callback_data + 'nameEN',
          // },
          {
            text: `—É–∫—Ä –Ω–∞–∑–≤–∞–Ω–∏–µ`,
            callback_data: callback_data + 'nameUA',
          },
          {
            text: `—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ`,
            callback_data: callback_data + 'nameRU',
          },
        ],
        [
          // {
          //   text: `descriptionEN`,
          //   callback_data: callback_data + 'descriptionEN',
          // },
          {
            text: `—É–∫—Ä –æ–ø–∏—Å–∞–Ω–∏–µ`,
            callback_data: callback_data + 'descriptionUA',
          },
          {
            text: `—Ä—É –æ–ø–∏—Å–∞–Ω–∏–µ`,
            callback_data: callback_data + 'descriptionRU',
          },
        ],
        [
          {
            text: `üóëÔ∏è ${
              user.language === UserLanguageEnum.EN
                ? 'Delete'
                : user.language === UserLanguageEnum.UA
                  ? '–í–∏–¥–∞–ª–∏—Ç–∏'
                  : '–£–¥–∞–ª–∏—Ç—å'
            }`,
            callback_data: 'AdminDeleteSubscriptionPlan',
          },
        ],
        [
          {
            text: `‚¨ÖÔ∏è ${
              user.language === UserLanguageEnum.EN
                ? 'Back'
                : user.language === UserLanguageEnum.UA
                  ? '–ù–∞–∑–∞–¥'
                  : '–ù–∞–∑–∞–¥'
            }`,
            callback_data: 'SendSubscriptionPlanAdminKeyboard',
          },
        ],
      ],
    },
  });
};

export const editSubscriptionPlanAdminDetailsKeyboard = async (
  chat_id: number,
  message_id: number,
  bot: TelegramBot,
  plan: SubscriptionPlan,
  redisService: RedisService,
  user: User,
) => {
  const text = `${
    user.language === UserLanguageEnum.EN
      ? 'Subscription plan data'
      : user.language === UserLanguageEnum.UA
        ? '–î–∞–Ω—ñ –ø–ª–∞–Ω—É –ø—ñ–¥–ø–∏—Å–∫–∏'
        : '–î–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏'
  }:

- <b>—Ü–µ–Ω–∞</b>: ${plan.price}

--------------

- <b>–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ª–∏</b>: ${plan.is_published} ${
    plan.is_published ? '‚úÖ' : '‚ùå'
  }

--------------

- <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤</b>: ${plan.months_count}

--------------

- <b>–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä</b>: ${plan.position}

--------------
  
- <b>—É–∫—Ä –Ω–∞–∑–≤–∞–Ω–∏–µ</b>: ${plan.nameUA}

--------------

- <b>—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ</b>: ${plan.nameRU}

--------------

- <b>—É–∫—Ä –æ–ø–∏—Å–∞–Ω–∏–µ</b>: ${plan.descriptionUA}

--------------

- <b>—Ä—É –æ–ø–∏—Å–∞–Ω–∏–µ</b>: ${plan.descriptionRU}

--------------

${
  user.language === UserLanguageEnum.EN
    ? 'Choose field to update'
    : user.language === UserLanguageEnum.UA
      ? '–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ–ª–µ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è'
      : '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
}:`;

  const planData = {
    id: plan.id,
  };

  const callback_data = `EditSubscriptionPlanAdmin;`;
  redisService.add(
    `EditSubscriptionPlanAdmin-${user.id}`,
    JSON.stringify(planData),
  );

  const inline_keyboard = [
    [
      {
        text: `—Ü–µ–Ω–∞`,
        callback_data: callback_data + 'price',
      },
      {
        text: `–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ª–∏`,
        callback_data: callback_data + 'is_published',
      },
    ],
    [
      {
        text: `–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤`,
        callback_data: callback_data + 'months_count',
      },
      {
        text: `–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä`,
        callback_data: callback_data + 'position',
      },
    ],
    [
      // {
      //   text: `nameEN`,
      //   callback_data: callback_data + 'nameEN',
      // },
      {
        text: `—É–∫—Ä –Ω–∞–∑–≤–∞–Ω–∏–µ`,
        callback_data: callback_data + 'nameUA',
      },
      {
        text: `—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ`,
        callback_data: callback_data + 'nameRU',
      },
    ],
    [
      // {
      //   text: `descriptionEN`,
      //   callback_data: callback_data + 'descriptionEN',
      // },
      {
        text: `—É–∫—Ä –æ–ø–∏—Å–∞–Ω–∏–µ`,
        callback_data: callback_data + 'descriptionUA',
      },
      {
        text: `—Ä—É –æ–ø–∏—Å–∞–Ω–∏–µ`,
        callback_data: callback_data + 'descriptionRU',
      },
    ],
    [
      {
        text: `üóëÔ∏è ${
          user.language === UserLanguageEnum.EN
            ? 'Delete'
            : user.language === UserLanguageEnum.UA
              ? '–í–∏–¥–∞–ª–∏—Ç–∏'
              : '–£–¥–∞–ª–∏—Ç—å'
        }`,
        callback_data: 'AdminDeleteSubscriptionPlan',
      },
    ],
    [
      {
        text: `‚¨ÖÔ∏è ${
          user.language === UserLanguageEnum.EN
            ? 'Back'
            : user.language === UserLanguageEnum.UA
              ? '–ù–∞–∑–∞–¥'
              : '–ù–∞–∑–∞–¥'
        }`,
        callback_data: 'SendSubscriptionPlanAdminKeyboard',
      },
    ],
  ];

  await bot.editMessageText(text, {
    chat_id,
    message_id,
    parse_mode: 'HTML',
  });

  await bot.editMessageReplyMarkup(
    {
      inline_keyboard,
    },
    {
      chat_id,
      message_id,
    },
  );
};
