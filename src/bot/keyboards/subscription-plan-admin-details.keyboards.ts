import TelegramBot from 'node-telegram-bot-api';
import { UserLanguageEnum } from 'src/helper';
import { RedisService } from 'src/redis/redis.service';
import { SubscriptionPlan } from 'src/subscriptionPlan/subscriptionPlan.entity';
import { User } from 'src/user/user.entity';

export const sendSubscriptionPlanAdminDetailsKeyboard = async (
  id: number,
  bot: TelegramBot,
  plan: SubscriptionPlan,
  redisService: RedisService,
  user: User,
) => {
  const text = `${
    user.language === UserLanguageEnum.EN
      ? 'Subscription plan data'
      : user.language === UserLanguageEnum.UA
        ? '–î–∞–Ω—ñ –ø–ª–∞–Ω—É –ø—ñ–¥–ø–∏—Å–∫–∏'
        : '–î–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏'
  }:

- price: ${plan.price}

- is published: ${plan.is_published} ${plan.is_published ? '‚úÖ' : '‚ùå'}

- months count: ${plan.months_count}
  
- nameEN: ${plan.nameEN}

- nameUA: ${plan.nameUA}

- nameRU: ${plan.nameRU}

- descriptionEN: ${plan.descriptionEN}

- descriptionUA: ${plan.descriptionUA}

- descriptionRU: ${plan.descriptionRU}

${
  user.language === UserLanguageEnum.EN
    ? 'Choose field to update'
    : user.language === UserLanguageEnum.UA
      ? '–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ–ª–µ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è'
      : '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
}:`;

  const planData = {
    id: plan.id,
  };

  const callback_data = `EditSubscriptionPlanAdmin;`;
  redisService.add(
    `EditSubscriptionPlanAdmin-${user.id}`,
    JSON.stringify(planData),
  );

  await bot.sendMessage(id, text, {
    reply_markup: {
      remove_keyboard: true,
      inline_keyboard: [
        [
          {
            text: `price`,
            callback_data: callback_data + 'price',
          },
          {
            text: `is published status`,
            callback_data: callback_data + 'is_published',
          },
          {
            text: `months count`,
            callback_data: callback_data + 'months_count',
          },
        ],
        [
          {
            text: `nameEN`,
            callback_data: callback_data + 'nameEN',
          },
          {
            text: `nameUA`,
            callback_data: callback_data + 'nameUA',
          },
          {
            text: `nameRU`,
            callback_data: callback_data + 'nameRU',
          },
        ],
        [
          {
            text: `descriptionEN`,
            callback_data: callback_data + 'descriptionEN',
          },
          {
            text: `descriptionUA`,
            callback_data: callback_data + 'descriptionUA',
          },
          {
            text: `descriptionRU`,
            callback_data: callback_data + 'descriptionRU',
          },
        ],
        [
          {
            text: `üóëÔ∏è ${
              user.language === UserLanguageEnum.EN
                ? 'Delete'
                : user.language === UserLanguageEnum.UA
                  ? '–í–∏–¥–∞–ª–∏—Ç–∏'
                  : '–£–¥–∞–ª–∏—Ç—å'
            }`,
            callback_data: 'AdminDeleteSubscriptionPlan',
          },
        ],
        [
          {
            text: `‚¨ÖÔ∏è ${
              user.language === UserLanguageEnum.EN
                ? 'Back'
                : user.language === UserLanguageEnum.UA
                  ? '–ù–∞–∑–∞–¥'
                  : '–ù–∞–∑–∞–¥'
            }`,
            callback_data: 'SendSubscriptionPlanAdminKeyboard',
          },
        ],
      ],
    },
  });
};
