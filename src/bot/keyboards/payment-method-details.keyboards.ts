import TelegramBot from 'node-telegram-bot-api';
import { UserLanguageEnum } from 'src/helper';
import { PaymentMethod } from 'src/paymentMethod/paymentMethod.entity';
import { Promocode } from 'src/promocode/promocode.entity';
import { SubscriptionPlan } from 'src/subscriptionPlan/subscriptionPlan.entity';
import { User } from 'src/user/user.entity';

export const sendPaymentMethodDetailsKeyboard = async (
  id: number,
  bot: TelegramBot,
  paymentMethod: PaymentMethod,
  plan: SubscriptionPlan,
  user: User,
  promocode?: Promocode,
) => {
  let newPrice;

  if (promocode) {
    newPrice = plan.price - (plan.price * promocode.sale_percent) / 100;
  }

  const price = newPrice
    ? `<s>${plan.price}</s> <b style="color:red">${newPrice}</b>`
    : plan.price.toString();

  const text =
    user.language === UserLanguageEnum.EN
      ? `Pay ${price}$ to the account that will arrive in the next message. Attention, carefully check the payment method, amount and network so as not to lose funds!`
      : user.language === UserLanguageEnum.UA
        ? `–û–ø–ª–∞—Ç—ñ—Ç—å ${price}$ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ —è–∫–∏–π –ø—Ä–∏–π–¥–µ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º. –£–≤–∞–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —É–≤–∞–∂–Ω–æ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏, —Å—É–º—É  —Ç–∞ –º–µ—Ä–µ–∂—É, —â–æ–± –Ω–µ –≤—Ç—Ä–∞—Ç–∏—Ç–∏ –∫–æ—à—Ç–∏!`
        : `–û–ø–ª–∞—Ç–∏—Ç–µ ${price}$ –Ω–∞ —Å—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –í–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã, —Å—É–º–º—É –∏ —Å–µ—Ç—å, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞!`;

  await bot.sendMessage(id, text, {
    parse_mode: 'HTML',
    reply_markup: {
      remove_keyboard: true,
      inline_keyboard: [
        [
          {
            text: `üíµ ${
              user.language === UserLanguageEnum.EN
                ? 'I paid'
                : user.language === UserLanguageEnum.UA
                  ? '–Ø –æ–ø–ª–∞—Ç–∏–≤'
                  : '–Ø –æ–ø–ª–∞—Ç–∏–ª'
            }`,
            callback_data: 'UserPaid;' + paymentMethod.id,
          },
        ],
        [
          {
            text: `‚¨ÖÔ∏è ${
              user.language === UserLanguageEnum.EN
                ? 'Back'
                : user.language === UserLanguageEnum.UA
                  ? '–ù–∞–∑–∞–¥'
                  : '–ù–∞–∑–∞–¥'
            }`,
            callback_data: 'BuySubscriptionPlan;' + plan.id,
          },
        ],
      ],
    },
  });

  await bot.sendMessage(id, paymentMethod.address);
};
